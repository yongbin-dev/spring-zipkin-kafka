#spring:
#  kafka:
#    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:}
spring:
  jpa:
    open-in-view: false
  datasource:
    jpa:
      url: jdbc:mysql://localhost:3306/yb
      username: yb
      password: 1234
      driver-class-name: com.mysql.cj.jdbc.Driver

    #    properties:
    #      hibernate:
    #        dialect: org.hibernate.dialect.MySQLDialect  # MySQL 방언 설정

  r2dbc:
    url: r2dbc:pool:mysql://localhost:3306/yb
    username: yb
    password: 1234
#  jpa:
#    legacy-ad:
#      hikari:
#        jdbc-url: jdbc:mysql://localhost:3306/yb
#        username: yb
#        password: 1234
#        maximum-pool-size: 50
#        driver-class-name: com.mysql.cj.jdbc.Driver
#      properties:
#        hibernate:
#          hbm2ddl.auto: update
#          show_sql: true
#          physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

kafka:
  brokers: localhost:19094
  topic: zipkin-topic
  group-id: zipkin-group
#  max-poll-records: 3
#  enable-auto-commit: false
#  auto-offset-reset: latest

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: b3_multi
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  endpoints:
    web:
      exposure:
        include: health,info,metrics

logging:
  level:
    org.springframework.r2dbc: DEBUG

#logging:
#  pattern:
#    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
